{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/Phase2/Phase 2 code challenge 1/src/components/app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Table from \"./table\";\nimport AddRow from \"./addRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost:3000/transactions\").then(resp => resp.json()).then(info => {\n      setData(info);\n      setLoading(false);\n    }).catch(error => {\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  //Update/Add new transactions to the D\n  function onAdd(newRow) {\n    const updateTransaction = [...data, newRow];\n    setData(updateTransaction);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AddRow, {\n      onAdd: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      transactions: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Table","AddRow","jsxDEV","_jsxDEV","App","_s","data","setData","loading","setLoading","error","setError","fetch","then","resp","json","info","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","message","onAdd","newRow","updateTransaction","transactions","_c","$RefreshReg$"],"sources":["/home/user/Development/code/Phase2/Phase 2 code challenge 1/src/components/app.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Table from \"./table\";\nimport AddRow from \"./addRow\";\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/transactions\")\n      .then((resp) => resp.json())\n      .then(\n        (info) => {\n          setData(info);\n          setLoading(false);\n        }\n      )\n      .catch((error) => {\n        setError(error);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n  //Update/Add new transactions to the D\n  function onAdd(newRow){\n    const updateTransaction=[...data,newRow]\n    setData(updateTransaction)\n  }\n\n  return (\n    <div>\n      <AddRow onAdd={onAdd}/>\n      <Table transactions={data} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAC3BF,IAAI,CACFG,IAAI,IAAK;MACRT,OAAO,CAACS,IAAI,CAAC;MACbP,UAAU,CAAC,KAAK,CAAC;IACnB,CACF,CAAC,CACAQ,KAAK,CAAEP,KAAK,IAAK;MAChBC,QAAQ,CAACD,KAAK,CAAC;MACfD,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIZ,KAAK,EAAE;IACT,oBAAOP,OAAA;MAAAe,QAAA,GAAK,SAAO,EAACR,KAAK,CAACa,OAAO;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1C;EACA;EACA,SAASE,KAAKA,CAACC,MAAM,EAAC;IACpB,MAAMC,iBAAiB,GAAC,CAAC,GAAGpB,IAAI,EAACmB,MAAM,CAAC;IACxClB,OAAO,CAACmB,iBAAiB,CAAC;EAC5B;EAEA,oBACEvB,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACF,MAAM;MAACuB,KAAK,EAAEA;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvBnB,OAAA,CAACH,KAAK;MAAC2B,YAAY,EAAErB;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV;AAACjB,EAAA,CAvCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}