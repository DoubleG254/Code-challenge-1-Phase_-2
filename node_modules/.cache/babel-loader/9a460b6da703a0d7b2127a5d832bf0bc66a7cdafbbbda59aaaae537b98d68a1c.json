{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/Phase2/Phase 2 code challenge 1/src/components/search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Table from \"./table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Search({\n  transactions,\n  onDelete\n}) {\n  _s();\n  const [description, setDescription] = useState(\"\");\n  function descriptionSearch(e) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n  const listTransaction = transactions.filter(transaction => {\n    if (description === \"\") {\n      return true;\n    } else {\n      return transaction.description === description;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: descriptionSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: description === \"\" ?\n      /*#__PURE__*/\n      // Render all transactions when description is empty\n      _jsxDEV(Table, {\n        transactions: transactions,\n        onDelete: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Render filtered transactions when description is not empty\n      _jsxDEV(Table, {\n        transactions: listTransaction,\n        onDelete: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Search, \"h9D/T9lgpWSoHPGgGzJJBrwKHw4=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","Search","transactions","onDelete","_s","description","setDescription","descriptionSearch","e","preventDefault","target","value","listTransaction","filter","transaction","children","onSubmit","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/Development/code/Phase2/Phase 2 code challenge 1/src/components/search.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"./table\";\n\nfunction Search({ transactions, onDelete }) {\n  const [description, setDescription] = useState(\"\");\n\n  function descriptionSearch(e) {\n    e.preventDefault();\n    setDescription(e.target.value);\n  }\n\n  const listTransaction = transactions.filter((transaction) => {\n    if (description === \"\") {\n      return true;\n    } else {\n      return transaction.description === description;\n    }\n  });\n\n  return (\n    <>\n      <form onSubmit={descriptionSearch}>\n        <input\n          type=\"text\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          placeholder=\"Description\"\n        />\n        <input type=\"submit\" placeholder=\"Search\" />\n      </form>\n      <div>\n        {description === \"\" ? (\n          // Render all transactions when description is empty\n          <Table transactions={transactions} onDelete={onDelete} />\n        ) : (\n          // Render filtered transactions when description is not empty\n          <Table transactions={listTransaction} onDelete={onDelete} />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,MAAMA,CAAC;EAAEC,YAAY;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAElD,SAASY,iBAAiBA,CAACC,CAAC,EAAE;IAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBH,cAAc,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAChC;EAEA,MAAMC,eAAe,GAAGV,YAAY,CAACW,MAAM,CAAEC,WAAW,IAAK;IAC3D,IAAIT,WAAW,KAAK,EAAE,EAAE;MACtB,OAAO,IAAI;IACb,CAAC,MAAM;MACL,OAAOS,WAAW,CAACT,WAAW,KAAKA,WAAW;IAChD;EACF,CAAC,CAAC;EAEF,oBACEP,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAMkB,QAAQ,EAAET,iBAAkB;MAAAQ,QAAA,gBAChCjB,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXN,KAAK,EAAEN,WAAY;QACnBa,QAAQ,EAAGV,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;QAChDQ,WAAW,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFzB,OAAA;QAAOmB,IAAI,EAAC,QAAQ;QAACE,WAAW,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACPzB,OAAA;MAAAiB,QAAA,EACGV,WAAW,KAAK,EAAE;MAAA;MACjB;MACAP,OAAA,CAACF,KAAK;QAACM,YAAY,EAAEA,YAAa;QAACC,QAAQ,EAAEA;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MAAA;MAEzD;MACAzB,OAAA,CAACF,KAAK;QAACM,YAAY,EAAEU,eAAgB;QAACT,QAAQ,EAAEA;MAAS;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC5D;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA,eACN,CAAC;AAEP;AAACnB,EAAA,CAtCQH,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAwCf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}